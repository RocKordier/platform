{#
A button with a Javascript handler

Parameters - array:
    [
        'class' - default class
        'btnCss' - additional css class for 'button' tag
        'icon' - svg icon name
        'iconExtraClass' - additional css class for svg icon
        'ariaLabel' - aria-label text for button
        'dataId' - data-id parameter
        'dataRedirect' - url to redirect to after the operation is finished
        'successMessage' - message to display after the operation is finished
        'label' - button label
        'visible' - defines whether the button is visible (true by default)
        'dataAttributes' - additional HTML data attributes
    ]
#}
{% macro clientBtn(parameters) %}
    {% import '@OroUI/macros.html.twig' as UIMacro %}
    {% set parameters = parameters|merge({
        class: parameters.class|default('') ~ ' ' ~ parameters.btnCss|default('btn')
    })%}
    {% set type = parameters.type is defined ? parameters.type : 'button' %}
    {% apply spaceless %}
        <button {{- UIMacro.clientControlAttrs(parameters) -}}
                type="{{ type }}"
                {% if (parameters.title is defined) %}
                    title="{{ parameters.title }}"
                {% endif %}
                {% if (parameters.form is defined) %}
                    form="{{ parameters.form }}"
                {% endif %}
                {%- if (parameters.dataUrlRaw is defined) -%}
                    data-url="{{ parameters.dataUrlRaw|raw }}"
                {% elseif (parameters.dataUrl is defined) %}
                    data-url="{{ parameters.dataUrl }}"
                {%- endif -%}
        >
        {%- apply spaceless -%}
            {%- if parameters.icon is defined -%}
                {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}
                {{- renderIcon.icon({
                    name: parameters.icon,
                    extraClass: parameters.iconExtraClass|default(null),
                }) -}}
            {%- endif -%}
            {% set labelClasses = 'action-label' ~ ' ' ~ parameters.labelClass|default('')|trim|split(' ')|array_unique|join(' ') %}
            {%- if parameters.label is defined or parameters.entityName is defined -%}
                <span class="{{ labelClasses }}">
                    {% set label = parameters.label is defined ? parameters.label|trim : ''  %}
                    {{- label -}}
                    {# Do not render entityName if it is already present in translation. It is used like this in 5.1LTS. #}
                    {%- if (
                            parameters.entityName is defined and parameters.entityName|trim|length
                            and parameters.entityName not in label
                        )
                    -%}
                        <span class="entity-name"> {{ parameters.entityName|trim }}</span>
                    {%- endif -%}
                </span>
            {%- endif -%}
        {%- endapply -%}
        </button>
    {% endapply %}
{% endmacro %}

{#
A link with a Javascript handler

Parameters - array:
    [
        'class' - default class
        'aCss' - additional css class for 'a' tag
        'icon' - svg icon name
        'iconExtraClass' - additional css class for svg icon
        'dataId' - data-id parameter
        'dataUrl' - data-url parameter
        'dataRedirect' - url to redirect to after the operation is finished
        'successMessage' - message to display after the operation is finished
        'title' - button title
        'ariaLabel' - button aria-label
        'label' - button label
        'visible' - defines whether the button is visible (true by default)
        'dataAttributes' - additional data attributes
    ]
#}
{% macro clientLink(parameters) %}
    {% import '@OroUI/macros.html.twig' as UIMacro %}
    {% set parameters = parameters|merge({
        class: parameters.class|default('') ~ (parameters.aCss is defined ? ' ' ~ parameters.aCss : '')
    })%}
    {% apply spaceless %}
        <a href="#"
        {%- if (parameters.dataUrlRaw is defined) -%}
            data-url="{{ parameters.dataUrlRaw|raw }}"
        {% elseif (parameters.dataUrl is defined) %}
            data-url="{{ parameters.dataUrl }}"
        {%- endif -%}
            {{- UIMacro.clientControlAttrs(parameters) -}}>
        {%- if parameters.icon is defined -%}
            {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}
            {{- renderIcon.icon({
                name: parameters.icon,
                extraClass: parameters.iconExtraClass|default(null),
            }) -}}
        {%- endif -%}
            {% set renderLinkLabel %}
                {{- parameters.label is defined ? parameters.label : '' -}}
            {% endset %}
            {% if parameters.labelClass is defined %}
                <span class="{{ parameters.labelClass }}">{{ renderLinkLabel }}</span>
            {% else %}
                {{ renderLinkLabel }}
            {% endif %}
        </a>
    {% endapply %}
{% endmacro %}


{#
Create the link
Parameters - array:
    [
        'path'  - button url
        'class' - default class
        'aCss'  - additional button class
        'title' - button title
        'icon'  - svg icon name
        'iconExtraClass' - additional css class for svg icon
        'label' - button label
        'role'  - link role HTML attribute
        'target' - target attribute
    ]
#}
{% macro link(parameters) %}
    {% apply spaceless %}
        <a href="{{ parameters.path }}"
                {% if (parameters.id is defined) %}
                    id="{{ parameters.id }}"
                {% endif %}
                {% if parameters.data is defined %}
                    {% for dataItemName,dataItemValue in parameters.data %}
                        data-{{ dataItemName }}="{{ dataItemValue is iterable ? dataItemValue|json_encode|e('html_attr')|raw : dataItemValue|e('html_attr')|raw }}"
                    {% endfor %}
                {% endif %}
                {% set classes = '' %}
                {% if parameters.class is defined %}
                    {% set classes = classes ~ ' ' ~ parameters.class|trim %}
                {% endif %}
                {% if parameters.aCss is defined %}
                    {% set classes = classes ~ ' ' ~ parameters.aCss|trim %}
                {% endif %}
                {% if classes|length %}
                    class="{{ classes|split(' ')|array_unique|join(' ') }}"
                {% endif %}
                {% if parameters.role is defined %}role="{{ parameters.role }}"{% endif %}
                {% if parameters.target is defined%}target="{{ parameters.target }}"{% endif %}
                {% if parameters.title is defined and parameters.title is not empty %}title="{{ parameters.title }}"{% endif %}
        >
        {%- if parameters.icon is defined -%}
            {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}
            {{- renderIcon.icon({
                name: parameters.icon,
                extraClass: parameters.iconExtraClass|default(null),
            }) -}}
        {%- endif -%}
            {% set renderLinkLabel %}
                {{- parameters.label|trim -}}
            {% endset %}
            {% if parameters.labelClass is defined %}
                <span class="{{ parameters.labelClass }}">{{ renderLinkLabel }}</span>
            {% else %}
                {{ renderLinkLabel }}
            {% endif %}
        </a>
    {% endapply %}
{% endmacro %}
