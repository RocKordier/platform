{% extends 'form_div_layout.html.twig' %}

{%- block form_row -%}
    <div class="form-row">
        <div class="form-row__label">
            {{- form_label(form, null, { 'label_attr': {'class': 'label'}}) -}}
        </div>
        <div class="form-row__content">
            {{- form_widget(form, {
                attr: {
                   'class': 'input input--full'
                }
            }) -}}
        </div>
        {{- form_errors(form) -}}
    </div>
{%- endblock form_row -%}

{%- block form_label -%}
    {% apply spaceless %}
        {% if label is not same as(false) %}
            {% if not compound %}
                {% set label_attr = label_attr|merge({'for': id}) %}
            {% endif %}
            {% if required %}
                {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
            {% endif %}
            {% if label is empty %}
                {% if label_format is not empty -%}
                    {% set label = label_format|replace({'%name%': name, '%id%': id}) %}
                {% else %}
                    {% set label = name|humanize %}
                {% endif %}
            {% endif %}
            {% set isRadioLabel = form.parent.vars.expanded|default(false) and checked is defined %}

            <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
                {%- if translatable_label is defined and not translatable_label -%}
                    {{ label }}
                {%- elseif raw_label is defined and raw_label -%}
                    {{ label|raw }}
                {%- else -%}
                    {{ label|trans({}, translation_domain) }}
                {%- endif -%}
                <span aria-hidden="true" class="{{ required ? 'required-symbol' : '' }}">
                    {%- if required and not isRadioLabel %}*{% else %}&nbsp;{% endif -%}
                </span>
            </label>
        {%- endif -%}
    {% endapply %}
{%- endblock form_label -%}

{%- block form_errors -%}
    {%- if errors|length > 0 -%}
        <ul class="notification notifications--error">
            {%- for error in errors -%}
                <li class="notification__item">{{ error.message|trans }}</li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
{%- endblock form_errors -%}

{% block attributes -%}
    {% set attributesThatContainsUri = ['src', 'href', 'action', 'cite', 'data', 'poster'] %}
    {% for attrname, attrvalue in attr %}
        {%- if (attrvalue is iterable) -%}
            {% set attr = attr|merge({(attrname): attrvalue|json_encode()}) %}
        {% elseif attrname in attributesThatContainsUri %}
            {% set attr = attr|merge({(attrname): attrvalue|e('html')|replace({'&amp;': '&'})|raw}) %}
        {% endif %}
    {% endfor %}

    {%- for attrname, attrvalue in attr -%}
        {{- " " -}}
        {%- if attrname in ['placeholder', 'title', 'aria-label'] -%}
            {{- attrname }}="{{ translation_domain is same as(false) ? attrvalue : attrvalue|trans(attr_translation_parameters, translation_domain) }}"
        {%- elseif attrvalue is same as(true) -%}
            {{- attrname }}="{{ attrname }}"
        {%- elseif attrvalue is not same as(false) -%}
            {{- attrname }}="{{ attrvalue }}"
        {%- endif -%}
    {%- endfor -%}
{%- endblock attributes -%}

{%- block choice_widget_collapsed %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' select select--full'
    }, attr) %}

    {{ parent() }}
{% endblock %}

{%- block number_widget -%}
    {%- set attr = attr|merge({'step': 'any', 'min': '0'}) -%}
    {%- set type = type|default('number') -%}
    {{ block('form_widget_simple') }}
{%- endblock number_widget -%}

{% block oro_entity_create_or_select_inline_widget %}
    {% import '@OroUI/layouts/renderIcon.html.twig' as renderIcon %}

    {% set isButtonsEnabled = not disabled and (attr.readonly is not defined or not attr.readonly) %}
    <div id="{{ id }}-el"
            {% if configs.extra_config is not defined or not configs.extra_config %}
                {% if form.vars.configs.async_dialogs|default(false) is same as(true) %}
                    {% set asyncNameSegment = 'async-' %}
                {% endif %}
                {% set urlParts = {
                    grid: {
                        route: form.vars.grid_widget_route|default('oro_datagrid_widget'),
                        gridWidgetView: form.vars.grid_view_widget_route|default('oro_datagrid_widget'),
                        parameters: {
                            gridName     : form.vars.grid_name,
                            params       : form.vars.grid_parameters,
                            renderParams : form.vars.grid_render_parameters
                        }
                    }
                } %}

                {% if form.vars.create_enabled|default(false) is same as(true) %}
                    {% set urlParts = urlParts|merge({
                        create: {
                            route:      form.vars.create_form_route,
                            parameters: form.vars.create_form_route_parameters
                        }
                    }) %}
                {% endif %}
                {% import '@OroUI/macros.html.twig' as UI %}
                {{ UI.renderPageComponentAttributes({
                    module: 'oroform/js/app/components/select-create-inline-type-' ~ asyncNameSegment|default('') ~ 'component',
                    options: {
                        inputSelector: '#'~id,
                        entityLabel: label|trans({}, translation_domain),
                        urlParts: urlParts,
                        existingEntityGridId: form.vars.existing_entity_grid_id|default('id'),
                        createEnabled: form.vars.create_enabled|default(false)
                    }
                }) }}
            {% else %}
                {% set _block = block('oro_entity_create_or_select_inline_js_' ~ configs.extra_config) %}
            {% endif %}
            {% if isButtonsEnabled %}class="entity-create-or-select-container {% if form.vars.create_enabled %}entity-create-enabled{% endif %}"{% endif %}>
        <div {% if isButtonsEnabled %}class="input-append"{% endif %}>
            {{ form_widget(form) }}

            {% if isButtonsEnabled %}
                <button class="add-on btn btn-icon btn-square-default entity-select-btn" type="button" aria-label="{{ 'oro.form.entity_select'|trans({'%name%': label|trans({}, translation_domain) }) }}">
                    {{ renderIcon.icon({name: 'hamburger-menu'}) }}
                </button>

                {% if form.vars.create_enabled %}
                    <button class="btn btn-icon btn-square-default entity-create-btn" type="button" aria-label="{{ 'oro.form.entity_create'|trans({'%name%': label|trans({}, translation_domain) }) }}">
                        {{ renderIcon.icon({name: 'plus'}) }}
                    </button>
                {% endif %}
            {% endif %}
        </div>
    </div>

    {% if _block is defined and _block is not empty %}
        {{ _block|raw }}
    {% endif %}
{% endblock %}
